name: CI/CD

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: node:18.17.0
    steps:
      - uses: actions/checkout@v4
      - name: Install node modules
        run: npm install
  unit-test:
    needs: [build]
    runs-on: ubuntu-latest
    container:
      image: node:18.17.0
    steps:
      - uses: actions/checkout@v4
      - name: Install Node Modules
        run: npm install
      - name: Run Tests With Coverage With Console And HTML Report
        run: npm test
      - uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage/
      - name: Code Coverage Summary Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage/cobertura-coverage.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '80'
  deploy:
    needs: [build, unit-test]
    runs-on: ubuntu-latest
    env:
      RENDER_DEPLOY_HOOK: ${{ secrets.RENDER_DEPLOY_HOOK }}
    steps:
      - name: Deploy With Hook
        run: curl -X POST $RENDER_DEPLOY_HOOK > deploy.json
      - uses: actions/upload-artifact@v4
        with:
          name: deploy
          path: deploy.json
      - name: Sleep by two minutes
        run: sleep 120
  acceptance-test:
    needs: [deploy]
    runs-on: ubuntu-latest
    container:
      image: node:18.17.0
    steps:
      - uses: actions/checkout@v4
      - name: Install Node Modules
        run: npm install
      - name: Run Acceptance Tests
        run: npm run test:acceptance --HOST=https://node-express-mp7s.onrender.com --PORT=443 --CONTEXT_PATH=/api --AMBIENTE=dev
      - uses: actions/upload-artifact@v4
        with:
          name: cucumber-report.html
          path: cucumber-report.html
  performance-test-artillery:
    needs: [deploy]
    runs-on: ubuntu-latest
    container:
      image: node:18.17.0
    steps:
      - uses: actions/checkout@v4
      - name: Install Node Modules
        run: npm install
      - name: Run Artillery Performance Tests
        run: npx artillery run -e "dev" performance-test/artillery/node-express.yml --output artillery-test.json
        env:
          BASE_PATH: https://node-express-mp7s.onrender.com/api
      - name: Generate Artillery Performance Tests HTML Report
        run: npm run test:performance-report
      - uses: actions/upload-artifact@v4
        with:
          name: artillery-report.html
          path: artillery-report.html
  performance-test-jmeter:
    needs: [deploy]
    runs-on: ubuntu-latest
    permissions: read-all|write-all
    container:
      image: openjdk:8
    steps:
      - uses: actions/checkout@v4
      - name: Download Apache JMeter
        run: wget https://dlcdn.apache.org/jmeter/binaries/apache-jmeter-5.6.3.tgz
      - name: Extract Apache JMeter tar
        run: tar -xzf apache-jmeter-5.6.3.tgz
      - name: Run Apache Jmeter Performance Tests
        run: sh apache-jmeter-5.6.3/bin/jmeter -n -t ${{ github.workspace }}/performance-test/jmeter/node-express.jmx -JvPROTOCOL=https -JvHOST="node-express-mp7s.onrender.com" -JvPORT=443 -JvCONTEXT=/api -JvVERSION=/ -JvAMBIENTE=dev -JvTHREADS=10 -JvTIMEOUT=8000 -JvRAMP_UP=1 -LDEBUG -l test_results.jtl -e -o ${{ github.workspace }}/jmeter-result
      - uses: actions/upload-artifact@v4
        with:
          name: jmeter-result
          path: jmeter-result/
